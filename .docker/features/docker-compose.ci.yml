version: "3.5"

services:
  codebase:
    build:
      context: .
      dockerfile: .docker/features/base.dockerfile
      #cache_to:
      #  - type=registry,ref=290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:codebase
      #tags:
      #  - 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:codebase
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:codebase
    container_name: codebase
    user: ${CURRENT_UID:-1000:1000}
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      ENVIRONMENT: debug
      APP_ENV: local
      DB_HOST: db
      DB_NAME: makeup
      DB_USER: root
      DB_PASS: makeup_root_password
      CACHED_SERVER: memcached:11211
      IMAGE_HOST: /products_pictures/
      IMAGE_SAVE_PATH: /var/storage
      SOLR_SERVER: http://solr:8983/solr/makeupua/
      SMARTY_COMPILE_CHECK: 1
      XDEBUG_MODE: coverage
    networks:
        - app-network
    volumes:
      #- .:/var/www
      - ./temp:/.npm
      - ./temp:/.composer
      - .docker/app/data:/var/storage
      - .docker/app/php.ini:/usr/local/etc/php/conf.d/local.ini
      - .docker/app/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - .docker/app/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .docker/app/xdebug_ip.ini:/usr/local/etc/php/conf.d/xdebug_ip.ini
      - .docker/app/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - .docker/app/msmtprc:/etc/msmtprc
      - /var/www/.docker

  database:
    build:
      context: .
      dockerfile: .docker/features/db.dockerfile
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:database
    container_name: database
    hostname: db
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: makeup
      MYSQL_ROOT_PASSWORD: makeup_root_password
    networks:
      - app-network
    command: mysqld --sql_mode="" --character-set-server=utf8 --collation-server=utf8_general_ci --innodb-flush-log-at-trx-commit=0

  app:
    build:
      context: .
      dockerfile: .docker/features/app.dockerfile
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:app_${CI_COMMIT_SHORT_SHA}
    environment:
      LOG_CHANNEL: single
    working_dir: /var/www
    user: ${CURRENT_UID:-1000:1000}
#    cpu_count: 4
    #mem_limit: 4g
    volumes:
      #- .:/var/www
      - ./temp:/.npm
      - ./temp:/.composer
      - .docker/app/data:/var/storage
      - .docker/app/php.ini:/usr/local/etc/php/conf.d/local.ini
      - .docker/app/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - .docker/app/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .docker/app/xdebug_ip.ini:/usr/local/etc/php/conf.d/xdebug_ip.ini
      - .docker/app/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - .docker/app/msmtprc:/etc/msmtprc
      - /var/www/.docker
      - ./tests/_output:/var/www/tests/_output
      - ./features/results:/var/www/features/results

  db:
#    build:
#      context: .
#      dockerfile: .docker/features/db.dockerfile
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:database_${CI_COMMIT_SHORT_SHA}

  migrations:
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:codebase
    #user: ${CURRENT_UID:-1000:1000}
    restart: 'no'
    depends_on:
      - database
      - memcached
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      ENVIRONMENT: debug
      APP_ENV: local
      DB_HOST: database
      DB_NAME: makeup
      DB_USER: root
      DB_PASS: makeup_root_password
      CACHED_SERVER: memcached:11211
      IMAGE_HOST: /products_pictures/
      IMAGE_SAVE_PATH: /var/storage
      SOLR_SERVER: http://solr:8983/solr/makeupua/
      SMARTY_COMPILE_CHECK: 1
      COMPOSER_ALLOW_XDEBUG=: 0
    networks:
      - app-network
    links:
      - database
      - memcached
    command: /bin/sh -c '(composer update --no-scripts --no-plugins --prefer-dist --no-dev) && (echo "migrating..") && (php artisan migrate --force -vvv)'
    working_dir: /var/www
    volumes:
      - .:/var/www
      - ./temp:/.npm
      - ./temp:/.composer
      - .docker/app/data:/var/storage
      - .docker/app/php.ini:/usr/local/etc/php/conf.d/local.ini
      - .docker/app/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - .docker/app/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .docker/app/xdebug_ip.ini:/usr/local/etc/php/conf.d/xdebug_ip.ini
      - .docker/app/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - .docker/app/msmtprc:/etc/msmtprc
      - /var/www/.docker

  unit-tests:
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:app_${CI_COMMIT_SHORT_SHA}
    user: ${CURRENT_UID:-1000:1000}
    restart: 'no'
    container_name: unit-tests
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      ENVIRONMENT: debug
      APP_ENV: local
      DB_HOST: db
      DB_NAME: makeup
      DB_USER: root
      DB_PASS: makeup_root_password
      CACHED_SERVER: memcached:11211
      IMAGE_HOST: /products_pictures/
      IMAGE_SAVE_PATH: /var/storage
      SOLR_SERVER: http://solr:8983/solr/makeupua/
      SMARTY_COMPILE_CHECK: 1
      XDEBUG_MODE: coverage
    networks:
      - app-network
    command: /bin/sh -c 'XDEBUG_MODE=coverage vendor/bin/phpunit tests/unit --log-junit=tests/_output/unit.xml --coverage-cobertura=tests/_output/cov.xml --do-not-cache-result --no-interaction --colors=always --process-isolation'
    working_dir: /var/www
    volumes:
      #- .:/var/www
      #- ./temp:/.npm
      #- ./temp:/.composer
      - .docker/app/data:/var/storage
      - .docker/app/php.ini:/usr/local/etc/php/conf.d/local.ini
      - .docker/app/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - .docker/app/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .docker/app/xdebug_ip.ini:/usr/local/etc/php/conf.d/xdebug_ip.ini
      - .docker/app/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - .docker/app/msmtprc:/etc/msmtprc
      - /var/www/.docker
      - type: bind
        source: ./tests/_output
        target: /var/www/tests/_output

  acceptance-tests:
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:app_${CI_COMMIT_SHORT_SHA}
    user: ${CURRENT_UID:-1000:1000}
    restart: 'no'
    container_name: acceptance-tests
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      ENVIRONMENT: debug
      APP_ENV: local
      DB_HOST: db
      DB_NAME: makeup
      DB_USER: root
      DB_PASS: makeup_root_password
      CACHED_SERVER: memcached:11211
      IMAGE_HOST: /products_pictures/
      IMAGE_SAVE_PATH: /var/storage
      SOLR_SERVER: http://solr:8983/solr/makeupua/
      SMARTY_COMPILE_CHECK: 1
      XDEBUG_MODE: coverage
    networks:
      - app-network
    command: /bin/sh -c 'vendor/bin/codecept run --xml=acceptance.xml --coverage-cobertura=cov.a.xml acceptance'
    working_dir: /var/www
    volumes:
      #- .:/var/www
      #- ./temp:/.npm
      #- ./temp:/.composer
      - .docker/app/data:/var/storage
      - .docker/app/php.ini:/usr/local/etc/php/conf.d/local.ini
      - .docker/app/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
      - .docker/app/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .docker/app/xdebug_ip.ini:/usr/local/etc/php/conf.d/xdebug_ip.ini
      - .docker/app/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - .docker/app/msmtprc:/etc/msmtprc
      - /var/www/.docker
      - type: bind
        source: ./tests/_output
        target: /var/www/tests/_output

  e2e-tests:
    build:
      context: .
      dockerfile: .docker/features/tests.dockerfile
      args:
        - CI_COMMIT_SHORT_SHA
    image: 290707654612.dkr.ecr.eu-central-1.amazonaws.com/gitlab-engine-pipeline-image:app_${CI_COMMIT_SHORT_SHA}
    depends_on: [app, db, webserver, adminer, selenoid, selenoid-ui, mailcatcher]
    container_name: e2e-tests
    user: ${CURRENT_UID:-1000:1000}
    environment:
      - API_HOST:webserver
      - DB_HOST:db
      - WD_HOST:selenoid
    networks:
      - app-network
    links:
      - app
      - db
      - webserver
      - adminer
      - mailcatcher
      - selenoid
      - selenoid-ui
    volumes:
      - type: bind
        source: ./features/results
        target: /var/www/features/results

  selenoid:
    image: public.ecr.aws/orienlabs/selenoid
    container_name: selenoid
    depends_on: [app, webserver]
    #    privileged: true
    links:
      - app
      - webserver
    networks:
      - app-network
    ports:
      - "4444:4444"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "$PWD/.docker/features/browsers.json:/etc/selenoid/browsers.json"
      - "$PWD/features/results/video/:/opt/selenoid/video/"
    command: ["-container-network","app-network", "-capture-driver-logs=true", "-limit=10"]

  selenoid-ui:
    image: public.ecr.aws/orienlabs/selenoid-ui
    container_name: selenoid-ui
    depends_on: [selenoid]
    #      privileged: true
    links:
      - selenoid
    networks:
      - app-network
    ports:
      - "8090:8080"
    command: [ "--selenoid-uri","http://selenoid:4444" ]


  webserver:
    container_name: webserver
    image: public.ecr.aws/docker/library/nginx:stable-alpine

  adminer:
    container_name: adminer
    image: public.ecr.aws/docker/library/adminer

  memcached:
    container_name: memcached
    image: public.ecr.aws/docker/library/memcached:alpine

  solr:
    container_name: solr
    image: public.ecr.aws/docker/library/solr:slim

  dynamodb:
    container_name: dynamodb
    image: public.ecr.aws/aws-dynamodb-local/aws-dynamodb-local:latest

  mailcatcher:
    container_name: mailcatcher